name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ['1.23.x']
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Build binary for E2E tests
        run: go build -o build/shotgun-cli .
      - name: Run unit tests
        run: go test ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: ./...

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true
      - name: Run gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          $(go env GOPATH)/bin/gosec ./...
      - name: Run nancy
        run: |
          curl -sSfL https://github.com/sonatype-nexus-community/nancy/releases/latest/download/nancy-linux-amd64 -o nancy
          chmod +x nancy
          ./nancy --no-color --skip-update go.sum

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true
      - name: Build binary for E2E tests
        run: go build -o build/shotgun-cli .
      - name: Run coverage
        run: |
          go test -coverprofile=coverage.out ./...
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  build:
    name: Cross-Platform Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - "linux/amd64"
          - "linux/arm64"
          - "darwin/amd64"
          - "darwin/arm64"
          - "windows/amd64"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true
      - name: Build
        run: |
          IFS='/' read -r os arch <<< "${{ matrix.target }}"
          ext=""
          if [ "$os" = "windows" ]; then ext=".exe"; fi
          GOOS=$os GOARCH=$arch go build -o build/shotgun-cli-$os-$arch$ext .
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ replace(matrix.target, '/', '-') }}
          path: build/

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true
      - name: Build binary for E2E tests
        run: go build -o build/shotgun-cli .
      - name: Run e2e tests
        run: go test ./test/e2e -v
